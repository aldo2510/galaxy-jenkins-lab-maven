pipeline {
    agent {
        docker { image 'maven:3.6.3-openjdk-11-slim' }
    }
    environment {
        SONAR_SCANNER_VERSION = "4.7.0.2747"
        SONAR_SCANNER_HOME = "/opt/sonar-scanner"
        SONAR_SCANNER_ZIP = "sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip"
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B verify'
            }

            post {
                success {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true, onlyIfSuccessful: true
                }
            }
        }

        stage('SonarQube analysis') {
            steps {
                script {
                    // Descargar e instalar SonarScanner
                    sh """
                        curl -sSLo ${SONAR_SCANNER_ZIP} https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/${SONAR_SCANNER_ZIP}
                        unzip -q ${SONAR_SCANNER_ZIP} -d ${SONAR_SCANNER_HOME}
                        rm -f ${SONAR_SCANNER_ZIP}
                    """

                    // Usar withSonarQubeEnv para inyectar las variables de entorno de SonarQube
                    withSonarQubeEnv('sonar-server') {
                        // Agregar el binario de SonarScanner al PATH
                        sh """
                            export PATH=\${SONAR_SCANNER_HOME}/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin:\${PATH}
                            \${SONAR_SCANNER_HOME}/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin/sonar-scanner \
                                -Dsonar.projectKey=labmaven01 \
                                -Dsonar.projectName=labmaven01 \
                                -Dsonar.sources=src/main \
                                -Dsonar.sourceEncoding=UTF-8 \
                                -Dsonar.language=java \
                                -Dsonar.tests=src/test \
                                -Dsonar.junit.reportsPath=target/surefire-reports \
                                -Dsonar.surefire.reportsPath=target/surefire-reports \
                                -Dsonar.jacoco.reportPath=target/jacoco.exec \
                                -Dsonar.java.binaries=target/classes \
                                -Dsonar.java.coveragePlugin=jacoco \
                                -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco.xml \
                                -Dsonar.exclusions=**/*IT.java,**/*TEST.java,**/*Test.java,**/src/it**,**/src/test**,**/gradle/wrapper** \
                                -Dsonar.java.libraries=target/*.jar
                        """
                    }
                }
            }
        }
    }
}
